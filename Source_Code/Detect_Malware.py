import os
from termcolor import cprint
from loading import initializingNetstat, netstatPortNumber

os.system('cls')

cprint("███████████████████████████████████████████████████████████████████████████████████████", 'blue')
cprint("█▄─▄▄▀█▄─▄▄─█─▄─▄─█▄─▄▄─█─▄▄▄─█─▄─▄─███▄─▀█▀─▄██▀▄─██▄─▄███▄─█▀▀▀█─▄██▀▄─██▄─▄▄▀█▄─▄▄─█", 'blue')
cprint("██─██─██─▄█▀███─████─▄█▀█─███▀███─██████─█▄█─███─▀─███─██▀██─█─█─█─███─▀─███─▄─▄██─▄█▀█", 'blue')
cprint("█▄▄▄▄██▄▄▄▄▄██▄▄▄██▄▄▄▄▄█▄▄▄▄▄██▄▄▄████▄▄▄█▄▄▄█▄▄█▄▄█▄▄▄▄▄██▄▄▄█▄▄▄██▄▄█▄▄█▄▄█▄▄█▄▄▄▄▄█", 'blue')

cprint('Welcome to Detect Malware. This software will help you scan viruses.',
       'yellow', attrs=['bold'])

cprint('\nDetecting Malware using \'Netstat\'.', 'cyan', attrs=['bold'])

# displaying the animation
initializingNetstat()

# checking for the online connection
cprint('\nShowing the active connections.', 'cyan', attrs=['bold'])
os.system('netstat -a')

# displaying the applications that have an online connection at that instance
cprint('\nShowing the name of the applications creating the connections and listening ports.',
       'cyan', attrs=['bold'])
os.system('netstat -b')

# displating the port number of the application which are online at that moment
cprint('\nShowing the port ID of the applications creating the connections and listening ports,', 'cyan',
       attrs=['bold'])
netstatPortNumber()
os.system('netstat -bno')

# opearation to be performed on the online connected applications
while True:
    cprint('\n1: Terminate a single process.', 'yellow', attrs=['bold'])
    cprint('2: Terminate multiple processes.', 'yellow', attrs=['bold'])
    cprint('3: Exit malware detection process.', 'yellow', attrs=['bold'])

    try:
        choice = int(input('Enter your choice: '))

    except ValueError:
        cprint('Enter Numeric Value only.')
        choice = int(input('Enter your choice: '))

    if choice == 1:
        try:
            cprint('\nEnter the process ID that seems suspicious to you: ',
                   'cyan', attrs=['bold'])
            p_ID = input()
            command = "taskkill /pid " + p_ID + " /F"
            os.system(command)

        except (ValueError, Exception):
            cprint('\n Entered process ID invalid or something might have gone wrong')

    elif choice == 2:
        try:
            cprint('\nEnter the process ID\'s that seems suspicious to you \"Example(123,456,789)\": ', 'cyan',
                   attrs=['bold'])
            p_ID = []
            p_ID = list(map(int, input().split(',')))

            for process in p_ID:
                command = "taskkill /pid " + str(process) + " /F"
                os.system(command)

        except (ValueError, Exception):
            cprint(
                '\n Entered process ID\'s are invalid or something might have gone wrong')

    elif choice == 3:
        break

    else:
        cprint('\nWrong input, Please try again.')



cprint('\n Thank you for using \"DETECT MALWARE\".', 'cyan', attrs=['bold'])

choice = input('Go Back? (y/n): ')
if choice == 'y' or choice == 'Y':
    os.system('cls')
    os.system('python Kissing_Bug.py')
else:
    exit()
